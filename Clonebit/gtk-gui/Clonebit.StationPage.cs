
// This file has been generated by the GUI designer. Do not modify.
namespace Clonebit
{
	public partial class StationPage
	{
		private global::Gtk.Table mainTable;

		private global::Gtk.Button cancelButton;

		private global::Gtk.CheckButton duplicateCheckBox;

		private global::Gtk.Frame infoFrame;

		private global::Gtk.Alignment alignement1;

		private global::Gtk.Table fileInfoTable;

		private global::Gtk.Label addressDescLabel;

		private global::Gtk.Label addressInfoLabel;

		private global::Gtk.Label infoLabel;

		private global::Gtk.Frame logsFrame;

		private global::Gtk.Alignment alignement;

		private global::Gtk.Label logsLabel;

		private global::Gtk.ProgressBar progressBar;

		private global::Gtk.Label titleLabel;

		protected virtual void Build()
		{
			global::Stetic.Gui.Initialize(this);
			// Widget Clonebit.StationPage
			global::Stetic.BinContainer.Attach(this);
			this.WidthRequest = 1280;
			this.HeightRequest = 720;
			this.Name = "Clonebit.StationPage";
			// Container child Clonebit.StationPage.Gtk.Container+ContainerChild
			this.mainTable = new global::Gtk.Table(((uint)(6)), ((uint)(1)), false);
			this.mainTable.Name = "mainTable";
			this.mainTable.RowSpacing = ((uint)(6));
			this.mainTable.ColumnSpacing = ((uint)(6));
			// Container child mainTable.Gtk.Table+TableChild
			this.cancelButton = new global::Gtk.Button();
			this.cancelButton.CanFocus = true;
			this.cancelButton.Name = "cancelButton";
			this.cancelButton.UseUnderline = true;
			this.cancelButton.Label = global::Mono.Unix.Catalog.GetString("Annuler");
			global::Gtk.Image w1 = new global::Gtk.Image();
			w1.Pixbuf = global::Stetic.IconLoader.LoadIcon(this, "gtk-cancel", global::Gtk.IconSize.Menu);
			this.cancelButton.Image = w1;
			this.mainTable.Add(this.cancelButton);
			global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.mainTable[this.cancelButton]));
			w2.TopAttach = ((uint)(4));
			w2.BottomAttach = ((uint)(5));
			w2.XOptions = ((global::Gtk.AttachOptions)(0));
			w2.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child mainTable.Gtk.Table+TableChild
			this.duplicateCheckBox = new global::Gtk.CheckButton();
			this.duplicateCheckBox.CanFocus = true;
			this.duplicateCheckBox.Name = "duplicateCheckBox";
			this.duplicateCheckBox.Label = global::Mono.Unix.Catalog.GetString("Duplication");
			this.duplicateCheckBox.DrawIndicator = true;
			this.duplicateCheckBox.UseUnderline = true;
			this.mainTable.Add(this.duplicateCheckBox);
			global::Gtk.Table.TableChild w3 = ((global::Gtk.Table.TableChild)(this.mainTable[this.duplicateCheckBox]));
			w3.TopAttach = ((uint)(2));
			w3.BottomAttach = ((uint)(3));
			w3.XOptions = ((global::Gtk.AttachOptions)(4));
			w3.YOptions = ((global::Gtk.AttachOptions)(0));
			// Container child mainTable.Gtk.Table+TableChild
			this.infoFrame = new global::Gtk.Frame();
			this.infoFrame.Name = "infoFrame";
			this.infoFrame.ShadowType = ((global::Gtk.ShadowType)(0));
			this.infoFrame.LabelXalign = 0.5F;
			this.infoFrame.BorderWidth = ((uint)(10));
			// Container child infoFrame.Gtk.Container+ContainerChild
			this.alignement1 = new global::Gtk.Alignment(0F, 0F, 1F, 1F);
			this.alignement1.Name = "alignement1";
			this.alignement1.LeftPadding = ((uint)(15));
			this.alignement1.TopPadding = ((uint)(15));
			this.alignement1.RightPadding = ((uint)(15));
			this.alignement1.BottomPadding = ((uint)(15));
			// Container child alignement1.Gtk.Container+ContainerChild
			this.fileInfoTable = new global::Gtk.Table(((uint)(1)), ((uint)(2)), false);
			this.fileInfoTable.Name = "fileInfoTable";
			this.fileInfoTable.RowSpacing = ((uint)(6));
			this.fileInfoTable.ColumnSpacing = ((uint)(6));
			// Container child fileInfoTable.Gtk.Table+TableChild
			this.addressDescLabel = new global::Gtk.Label();
			this.addressDescLabel.Name = "addressDescLabel";
			this.addressDescLabel.Xalign = 0F;
			this.addressDescLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Adresse IPv4 :</b>");
			this.addressDescLabel.UseMarkup = true;
			this.fileInfoTable.Add(this.addressDescLabel);
			global::Gtk.Table.TableChild w4 = ((global::Gtk.Table.TableChild)(this.fileInfoTable[this.addressDescLabel]));
			w4.XOptions = ((global::Gtk.AttachOptions)(0));
			w4.YOptions = ((global::Gtk.AttachOptions)(0));
			// Container child fileInfoTable.Gtk.Table+TableChild
			this.addressInfoLabel = new global::Gtk.Label();
			this.addressInfoLabel.Name = "addressInfoLabel";
			this.addressInfoLabel.Xalign = 0F;
			this.addressInfoLabel.UseMarkup = true;
			this.addressInfoLabel.Selectable = true;
			this.fileInfoTable.Add(this.addressInfoLabel);
			global::Gtk.Table.TableChild w5 = ((global::Gtk.Table.TableChild)(this.fileInfoTable[this.addressInfoLabel]));
			w5.LeftAttach = ((uint)(1));
			w5.RightAttach = ((uint)(2));
			w5.XOptions = ((global::Gtk.AttachOptions)(4));
			w5.YOptions = ((global::Gtk.AttachOptions)(0));
			this.alignement1.Add(this.fileInfoTable);
			this.infoFrame.Add(this.alignement1);
			this.infoLabel = new global::Gtk.Label();
			this.infoLabel.Name = "infoLabel";
			this.infoLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Informations sur la station de duplication</b>");
			this.infoLabel.UseMarkup = true;
			this.infoFrame.LabelWidget = this.infoLabel;
			this.mainTable.Add(this.infoFrame);
			global::Gtk.Table.TableChild w8 = ((global::Gtk.Table.TableChild)(this.mainTable[this.infoFrame]));
			w8.TopAttach = ((uint)(1));
			w8.BottomAttach = ((uint)(2));
			w8.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child mainTable.Gtk.Table+TableChild
			this.logsFrame = new global::Gtk.Frame();
			this.logsFrame.Name = "logsFrame";
			this.logsFrame.ShadowType = ((global::Gtk.ShadowType)(0));
			this.logsFrame.LabelXalign = 0.5F;
			this.logsFrame.BorderWidth = ((uint)(10));
			// Container child logsFrame.Gtk.Container+ContainerChild
			this.alignement = new global::Gtk.Alignment(0F, 0F, 1F, 1F);
			this.alignement.Name = "alignement";
			this.alignement.LeftPadding = ((uint)(12));
			this.logsFrame.Add(this.alignement);
			this.logsLabel = new global::Gtk.Label();
			this.logsLabel.Name = "logsLabel";
			this.logsLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Journalisation</b>");
			this.logsLabel.UseMarkup = true;
			this.logsFrame.LabelWidget = this.logsLabel;
			this.mainTable.Add(this.logsFrame);
			global::Gtk.Table.TableChild w10 = ((global::Gtk.Table.TableChild)(this.mainTable[this.logsFrame]));
			w10.TopAttach = ((uint)(3));
			w10.BottomAttach = ((uint)(4));
			// Container child mainTable.Gtk.Table+TableChild
			this.progressBar = new global::Gtk.ProgressBar();
			this.progressBar.HeightRequest = 32;
			this.progressBar.Name = "progressBar";
			this.progressBar.Text = "";
			this.mainTable.Add(this.progressBar);
			global::Gtk.Table.TableChild w11 = ((global::Gtk.Table.TableChild)(this.mainTable[this.progressBar]));
			w11.TopAttach = ((uint)(5));
			w11.BottomAttach = ((uint)(6));
			w11.XPadding = ((uint)(10));
			w11.YPadding = ((uint)(10));
			w11.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child mainTable.Gtk.Table+TableChild
			this.titleLabel = new global::Gtk.Label();
			this.titleLabel.Name = "titleLabel";
			this.titleLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>STATION X</b>");
			this.titleLabel.UseMarkup = true;
			this.titleLabel.Justify = ((global::Gtk.Justification)(2));
			this.mainTable.Add(this.titleLabel);
			global::Gtk.Table.TableChild w12 = ((global::Gtk.Table.TableChild)(this.mainTable[this.titleLabel]));
			w12.XOptions = ((global::Gtk.AttachOptions)(4));
			w12.YOptions = ((global::Gtk.AttachOptions)(4));
			this.Add(this.mainTable);
			if ((this.Child != null))
			{
				this.Child.ShowAll();
			}
			this.Hide();
			this.duplicateCheckBox.Clicked += new global::System.EventHandler(this.OnDuplicateCheckBoxClicked);
		}
	}
}
